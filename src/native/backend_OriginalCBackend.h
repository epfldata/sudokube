/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class backend_OriginalCBackend */

#ifndef _Included_backend_OriginalCBackend
#define _Included_backend_OriginalCBackend
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:      backend_OriginalCBackend
 * Method:     reset0
 * Signature:  ()V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_reset0
  (JNIEnv *, jobject);

/*
 * Class:      backend_OriginalCBackend
 * Method:     sRehash0
 * Signature:  (I[II)I
 */
JNIEXPORT jint JNICALL Java_backend_OriginalCBackend_sRehash0
  (JNIEnv *, jobject, jint, jintArray, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     dRehash0
 * Signature:  (I[I)I
 */
JNIEXPORT jint JNICALL Java_backend_OriginalCBackend_dRehash0
  (JNIEnv *, jobject, jint, jintArray);

/*
 * Class:      backend_OriginalCBackend
 * Method:     sRehashSlice0
 * Signature:  (I[I[Z)[J
 */
JNIEXPORT jlongArray JNICALL Java_backend_OriginalCBackend_sRehashSlice0
  (JNIEnv *, jobject, jint, jintArray, jbooleanArray);

/*
 * Class:      backend_OriginalCBackend
 * Method:     dRehashSlice0
 * Signature:  (I[I[Z)[J
 */
JNIEXPORT jlongArray JNICALL Java_backend_OriginalCBackend_dRehashSlice0
  (JNIEnv *, jobject, jint, jintArray, jbooleanArray);

/*
 * Class:      backend_OriginalCBackend
 * Method:     dFetch0
 * Signature:  (I)[J
 */
JNIEXPORT jlongArray JNICALL Java_backend_OriginalCBackend_dFetch0
  (JNIEnv *, jobject, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     sSize0
 * Signature:  (I)I
 */
JNIEXPORT jint JNICALL Java_backend_OriginalCBackend_sSize0
  (JNIEnv *, jobject, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     sNumBytes0
 * Signature:  (I)J
 */
JNIEXPORT jlong JNICALL Java_backend_OriginalCBackend_sNumBytes0
  (JNIEnv *, jobject, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     mkAll0
 * Signature:  (II)I
 */
JNIEXPORT jint JNICALL Java_backend_OriginalCBackend_mkAll0
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     add_1i
 * Signature:  (IIIILjava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_add_1i
  (JNIEnv *, jobject, jint, jint, jint, jint, jobject);

/*
 * Class:      backend_OriginalCBackend
 * Method:     mk0
 * Signature:  (I)I
 */
JNIEXPORT jint JNICALL Java_backend_OriginalCBackend_mk0
  (JNIEnv *, jobject, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     add
 * Signature:  (IIILjava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_add
  (JNIEnv *, jobject, jint, jint, jint, jobject);

/*
 * Class:      backend_OriginalCBackend
 * Method:     freezePartial
 * Signature:  (II)V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_freezePartial
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     freeze
 * Signature:  (I)V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_freeze
  (JNIEnv *, jobject, jint);

/*
 * Class:      backend_OriginalCBackend
 * Method:     readMultiCuboid0
 * Signature:  (Ljava/lang/String;[Z[I[I)[I
 */
JNIEXPORT jintArray JNICALL Java_backend_OriginalCBackend_readMultiCuboid0
  (JNIEnv *, jobject, jstring, jbooleanArray, jintArray, jintArray);

/*
 * Class:      backend_OriginalCBackend
 * Method:     writeMultiCuboid0
 * Signature:  (Ljava/lang/String;[Z[I)V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_writeMultiCuboid0
  (JNIEnv *, jobject, jstring, jbooleanArray, jintArray);

/*
 * Class:      backend_OriginalCBackend
 * Method:     saveAsTrie0
 * Signature:  ([Lscala/Tuple2;Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_saveAsTrie0
  (JNIEnv *, jobject, jobjectArray, jstring, jlong);

/*
 * Class:      backend_OriginalCBackend
 * Method:     loadTrie0
 * Signature:  (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_backend_OriginalCBackend_loadTrie0
  (JNIEnv *, jobject, jstring);

/*
 * Class:      backend_OriginalCBackend
 * Method:     prepareFromTrie0
 * Signature:  ([I)[Lscala/Tuple2;
 */
JNIEXPORT jobjectArray JNICALL Java_backend_OriginalCBackend_prepareFromTrie0
  (JNIEnv *, jobject, jintArray);

#ifdef __cplusplus
}
#endif
#endif
