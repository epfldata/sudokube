syntax = "proto3";
package frontend.service;

service SudokubeService {

  /* Materialize */
  rpc getBaseCuboids(Empty) returns (BaseCuboidResponse);
  rpc selectBaseCuboid(SelectBaseCuboidArgs) returns (SelectBaseCuboidResponse);
  rpc selectMaterializationStrategy(SelectMaterializationStrategyArgs) returns (Empty);
  rpc getChosenCuboids(GetCuboidsArgs) returns (GetChosenCuboidsResponse);
  rpc deleteChosenCuboid(DeleteSelectedCuboidArgs) returns (Empty);
  rpc getAvailableCuboids(GetCuboidsArgs) returns (GetAvailableCuboidsResponse);
  rpc manuallyUpdateCuboids(ManuallyUpdateCuboidsArgs) returns (Empty);
  rpc materializeCuboids(MaterializeArgs) returns (Empty);

  /* Explore */
  rpc getDataCubesForExplore(Empty) returns (GetCubesResponse);
  rpc selectDataCubeForExplore(SelectDataCubeArgs) returns (SelectDataCubeForExploreResponse);
  rpc isRenameQuery(IsRenamedQueryArgs) returns (IsRenamedQueryResponse);
  rpc startRenameTimeQuery(GetRenameTimeArgs) returns (GetRenameTimeResponse);
  rpc continueRenameTimeQuery(Empty) returns (GetRenameTimeResponse);
  rpc transformCube(TransformDimensionsArgs) returns (Empty);

  /* Query */
  rpc getDataCubesForQuery(Empty) returns (GetCubesResponse);
  rpc selectDataCubeForQuery(SelectDataCubeArgs) returns (SelectDataCubeForQueryResponse);
  rpc getValuesForSlice(GetSliceValuesArgs) returns (GetSliceValueResponse);
  rpc setValuesForSlice(SetSliceValuesArgs) returns (Empty);
  rpc getFilters(Empty) returns (GetFiltersResponse); // Currently applied filters
  rpc deleteFilter(DeleteFilterArgs) returns (Empty);
  rpc startQuery(QueryArgs) returns (QueryResponse);
  rpc continueQuery(Empty) returns (QueryResponse);
  rpc getPreparedCuboids(GetPreparedCuboidsArgs) returns (GetPreparedCuboidsResponse); // for page change in cuboids table
}

message Empty {}

/** Materialize Message **/

message BaseCuboidResponse {
  repeated string cuboids = 1;
}

message SelectBaseCuboidArgs {
  string cuboid = 1;
}

message CuboidDimension {
  string name = 1;
  uint32 num_bits = 2;
}

message SelectBaseCuboidResponse {
  repeated CuboidDimension dimensions = 1;
}

message SelectMaterializationStrategyArgs {
  string name = 1;
  repeated string args = 2;
}


message DimensionFilterCuboid {
  string dimension_name = 1;
  uint32 bits_from = 2;
  uint32 bits_to = 3;
}

message DeleteSelectedCuboidArgs {
  uint32 cuboid_id_within_page = 1;
}

message GetCuboidsArgs {//shared between GetChosenCuboids and GetAvailableCuboids
  repeated DimensionFilterCuboid filters = 1;
  uint32 requested_page_id = 2;
  uint32 rows_per_page = 3;
}

message DimensionBits {
  string dimension_name = 1;
  repeated bool chosen_bits = 2;
}

message CuboidDef {
  repeated DimensionBits dimensions = 1;
}

message GetChosenCuboidsResponse {
  repeated CuboidDef cuboids = 1;
}

message GetAvailableCuboidsResponse {
  message ManualSelectionCuboidDef {
    repeated DimensionBits dimensions = 1;
    bool is_chosen = 2;
  }
  repeated ManualSelectionCuboidDef cuboids = 1;
}

message ManuallyUpdateCuboidsArgs {
  repeated bool is_chosen = 1; //for all cuboids in the current page
}

message MaterializeArgs {
  string cube_name = 1;
}

/** Explore and Transform Messages **/

message GetCubesResponse  {
  repeated string cubes = 1;
}

message SelectDataCubeArgs {//shared between Explore and Query
  string cube = 1;
}
message SelectDataCubeForExploreResponse {
  repeated string dim_names = 1;
}


message IsRenamedQueryArgs {
  string dimension1 = 1;
  string dimension2 = 2;
}

message IsRenamedQueryResponse {
  repeated uint32 result = 1;
  bool is_renamed = 2;
}


message GetRenameTimeArgs {
  string dimension_name = 1;
}
message GetRenameTimeResponse  {
  uint32 num_time_bits = 1;
  bool is_complete = 2;
  repeated bool filters_applied = 3; //false-true for 0-1
  message ResultRow {
    string time_range = 1;
    uint32 null_count = 2;
    uint32 not_null_count = 3;
  }
  repeated ResultRow result_rows = 4;
  string rename_time = 5;
}

message MergeColumnDef  {
  string dim1 = 1;
  string dim2 = 2;
  string new_dim = 3;
}

message TransformDimensionsArgs {
  repeated MergeColumnDef cols = 1;
  string new_cube_name = 2;
}

/**  Query messages **/
message SelectDataCubeForQueryResponse {
  message DimHierarchy {
    string dim_name = 1;
    repeated string levels = 2;
  }
  repeated DimHierarchy dim_hierarchy = 1;
  repeated CuboidDimension cuboid_dims = 2;
  repeated string measures = 3;
}

message GetSliceValuesArgs  {
  string dimension_name = 1;
  string dimension_level = 2;
  string search_text = 3;
  uint32 requested_page_id = 4;
  uint32 num_rows_in_page = 5;
}

message GetSliceValueResponse {
  repeated string values = 1;
  repeated bool is_selected = 2;
}

message SetSliceValuesArgs {
  repeated bool is_selected = 1; // Whether each value on the page is selected
}

message GetFiltersResponse {
  message FilterDef {
    string dimension_name = 1;
    string dimension_level = 2;
    string values = 3;
  }
  repeated FilterDef filters = 1;
}

message DeleteFilterArgs {
  uint32 index = 1;
}

message QueryArgs {
  message DimensionDef {
    string dimension_name = 1;
    string dimension_level = 2;
  }
  repeated DimensionDef horizontal = 1;
  repeated DimensionDef series = 2;
  string measure = 3;
  string aggregation = 4;
  string solver = 5;
  bool is_batch_mode = 6;
  uint32 prepared_cuboids_per_page = 8; //SBJ: Should it be part of different request?
}

message XYPoint {
  string x = 1; //should it be float with additional string label?
  float y = 2;
}
message QueryStatistic {
  string name = 1;
  string value = 2;
}
message QueryResponse {
  uint32 cuboids_page_id = 1;
  repeated CuboidDef cuboids = 2;
  uint32 current_cuboid_id_within_page = 3;
  bool is_complete = 4;
  message SeriesData {
    string series_name = 1;
    repeated XYPoint data = 2;
  }
  repeated SeriesData series = 5;
  repeated QueryStatistic stats = 6;
}

message GetPreparedCuboidsArgs {
  uint32 requested_page_id = 1;
  uint32 num_rows_in_page = 2;
}

message GetPreparedCuboidsResponse {
  repeated CuboidDef cuboids = 1;
}